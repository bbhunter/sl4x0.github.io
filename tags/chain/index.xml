<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chain on Abdelrhman Allam</title>
    <link>https://sl4x0.github.io/tags/chain/</link>
    <description>Recent content in chain on Abdelrhman Allam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://sl4x0.github.io/tags/chain/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Research | How can Local File Inclusion lead to RCE ?</title>
      <link>https://sl4x0.github.io/research/local-file-inclusion-to-rce/</link>
      <pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://sl4x0.github.io/research/local-file-inclusion-to-rce/</guid>
      <description>Content File Inclusion How the attck works for Remote File Inclusion How the attck works for Local File Inclusion Vulnerable PHP Function for File Inclusion Local File Inclusion To Remote Command Execution LFI to RCE via Apache Log LFI to RCE via Process Environ LFI to RCE via Other Files Fundamental of Perl Library for Exploit Website Introduction to Socket Introduction to Library for WWW in Perl Condition to use Socket or LWP Writing LFI to RCE Exploit with Perl Script Perl Exploit to Injecting code into Target Inject via logfile Inject via Other files Inject via process environment Perl Exploit to Executing injected code on Target Execute code from logfile Execute code from other files Execute code from process environment Execute code from logfile LFI to RCE Complete Exploit Use Logfile Injection Defenses References File Inclusion File Inclusion allows attackers to run their own code on a vulnerable website.</description>
    </item>
    
  </channel>
</rss>
